---
import { format } from 'date-fns';

import BaseHeader from '~/components/base-header.astro';
import BaseSns from '~/components/base-sns.astro';
import CursorEffect from '~/components/cursor-effect.astro';
import { NAV } from '~/consts';
import MainLayout from '~/layouts/main-layout.astro';
import { useI18n } from '~/libs/i18n';
import { getNotePostInfoList, getWritingPostInfoList } from '~/libs/mdx';
import { cn } from '~/libs/utils';

const { url } = Astro;
const { lang, p, t } = useI18n(url);

const [writingList, noteList] = await Promise.all([
  getWritingPostInfoList(lang),
  getNotePostInfoList(lang),
]);

const LIST_SIZE = 4;
const START_OPACITY = 0.2;
const renderListItemOpacity = (i: number) => {
  return START_OPACITY + ((LIST_SIZE - i) / LIST_SIZE) * (1 - START_OPACITY);
};
---

<MainLayout class="font-serif">
  <BaseHeader title={`${t('index.name')} ﹒ bepyan`} />
  <div>
    {/* 소개 */}
    <div class="my-7" set:html={t('index.desc')} />
    <div class="my-7">
      {/* 현재 */}
      <p set:html={t('index.currentWork')} />
      {/* SNS */}
      <BaseSns data-animate class="mt-1" />
    </div>
  </div>
  {/* 나의 공간 */}
  <div class="my-14">
    <div data-animate data-animate-speed="slow" class="flex flex-col gap-14">
      {
        NAV.map((item) => (
          <div style="--lv-wait: 2;">
            <div>
              <a class="link font-bold" href={p(`/${item}`)}>
                {t(`nav.${item}`)}
              </a>
              <span>, {t(`nav.${item}.desc`)}</span>
            </div>
            <ul class="relative ml-3 flex flex-col-reverse gap-1.5 rounded-bl-lg border-b border-l py-3 pr-1 pl-4 md:w-3/4">
              {item === 'writing' &&
                writingList.slice(0, LIST_SIZE).map((post, i) => (
                  <li style={{ opacity: renderListItemOpacity(i) }}>
                    <a class="link peer" href={post.href}>
                      {post.title}
                    </a>
                    <span
                      class={cn(
                        'text-2xs ml-1 max-sm:hidden',
                        i > 0 &&
                          'opacity-0 transition-all ease-out peer-hover:opacity-100',
                      )}
                    >
                      {format(post.date, 'yy.MM.dd')}
                    </span>
                  </li>
                ))}
              {item === 'note' &&
                noteList.slice(0, LIST_SIZE).map((post, i) => (
                  <li style={{ opacity: renderListItemOpacity(i) }}>
                    <a class="link peer mr-1" href={post.href}>
                      {post.title}
                    </a>
                    <span
                      class={cn(
                        'text-2xs ml-1 max-sm:hidden',
                        i > 0 &&
                          'opacity-0 transition-all ease-out peer-hover:opacity-100',
                      )}
                    >
                      {format(post.date, 'yy.MM.dd')}
                    </span>
                  </li>
                ))}
              {item === 'craft' && <li>{t('wip')}</li>}
            </ul>
          </div>
        ))
      }
    </div>
  </div>
  <div class="h-14"></div>
  <CursorEffect />
</MainLayout>
