---
import { type CollectionEntry } from 'astro:content';

import type { Language } from '~/i18n/ui';
import { getLangFromSlug } from '~/i18n/utils';
import PostLayout from '~/layouts/post-layout.astro';
import { getPostCollection, isNote, isWriting, resolveSlug } from '~/libs/mdx';

export async function getStaticPaths() {
  const posts = await getPostCollection();

  return posts
    .filter((post) => getLangFromSlug(post.slug) === 'en')
    .map((post, _, list) => {
      const postList = list.filter((item) => {
        if (isWriting(post)) return isWriting(item);
        if (isNote(post)) return isNote(item);
        return true;
      });
      const postIndex = postList.findIndex((item) => item.id === post.id);

      return {
        params: { slug: resolveSlug(post.slug) },
        props: {
          lang: 'en',
          post,
          prevPost: postList[postIndex + 1],
          nextPost: postList[postIndex - 1],
        },
      };
    });
}

type Props = {
  lang: Language;
  post: CollectionEntry<'post'>;
  prevPost: CollectionEntry<'post'>;
  nextPost: CollectionEntry<'post'>;
};
---

<PostLayout {...Astro.props} />
