---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import { format } from 'date-fns';

import Main from '~/layouts/main.astro';
import { sortDateDesc } from '~/libs/mdx';

const posts = (await getCollection('writing')).sort(sortDateDesc);

const yearList = Object.entries(
  posts.reduce<{ [year: string]: CollectionEntry<'writing'>[] }>((ac, post) => {
    const year = new Date(post.data.date).getFullYear();
    if (!ac[year]) {
      ac[year] = [];
    }

    ac[year].push(post);
    return ac;
  }, {}),
).sort((a, b) => +b[0] - +a[0]);
---

<Main>
  <main class="font-serif">
    <h2 class="mb-14 font-semibold leading-7">나의 서재</h2>
    <section class="group">
      {
        yearList.map(([year, postList]) => {
          return (
            <div class="relative border-t">
              <h3 class="absolute top-3 -z-10 text-sm text-gray-500">{year}</h3>
              {postList.sort(sortDateDesc).map((post) => {
                return (
                  <a
                    href={`/post/${post.slug}`}
                    class="group/item flex transition-opacity hover:!opacity-100 group-hover:opacity-40"
                  >
                    <div class="ml-[20%] flex flex-1 border-t py-3 group-first-of-type/item:border-t-0">
                      <span class="text-gray-900">{post.data.title}</span>
                      <span class="ml-auto flex-shrink-0 px-2 text-sm text-gray-500">
                        {format(post.data.date, 'MM. dd.')}
                      </span>
                    </div>
                  </a>
                );
              })}
            </div>
          );
        })
      }
    </section>
  </main>
</Main>
